var SSP=0,SIM=1,POS=2,EVO=3,alnBresults=[],alnAresults=[],alnAF,alnBF,padChars=20,charWidth,colDistA,colDistB,sparkLineClickA,sparkLineClickB,homType=2,sparklineDistanceType=!0,G={},pack=function(a){return JSON.stringify(a)},unpack=function(a){return JSON.parse(a)},alertFallback=!1;if("undefined"===typeof console||"undefined"===typeof console.log)console={},console.log=alertFallback?function(a){alert(a)}:function(){};$(function(){draganddrop("#alignment1");draganddrop("#alignment2");draganddrop("#newick")});
function getHandleFileSelect(a){return function(d){console.log("HANDLING FILE");var d=d.originalEvent||d,b=d.target.files[0];console.log(d);getFile(b,a)}}function getFile(a,d){console.log("Attempting to get "+a);var b=new FileReader;b.onload=function(a){console.log(a);d.val(a.target.result)};b.readAsText(a)}
function draganddrop(a){var d=$(a);d.bind({dragover:function(){$(this).addClass("hover");return!1},dragend:function(){$(this).removeClass("hover");return!1},drop:function(a){a=a||window.event;a.preventDefault();a=a.originalEvent||a;console.log(a);getFile((a.files||a.dataTransfer.files)[0],d);return!1}})}
function example(a){$.ajax(location.protocol+"//"+location.host+"/"+location.pathname.split("/").slice(0,-1).join("/")+"/examples/example"+a+"a.fa").done(function(a){$("#alignment1").val(a)});$.ajax(location.protocol+"//"+location.host+"/"+location.pathname.split("/").slice(0,-1).join("/")+"/examples/example"+a+"b.fa").done(function(a){$("#alignment2").val(a)});$.ajax(location.protocol+"//"+location.host+"/"+location.pathname.split("/").slice(0,-1).join("/")+"/examples/example"+a+".tre").done(function(a){$("#newick").val(a)})}
function supports_web_workers(){return!!window.Worker}var useWorkers=supports_web_workers(),START=new Date;function dateStamp(a){var d=new Date;console.log(d-START+" : "+a);START=d}function process(){$("#errorBox").css("display","none");$("#dialogtext").html("Calculation of homology sets");dialogBox.center();dialogBox.open();dateStamp("end process()");_.defer(process1)}
function process1(){console.log("process1");G.doEvo=0;try{alnA=parser($("#alignment1").val(),"alignment 1");alnB=parser($("#alignment2").val(),"alignment 2");"nucleotide"==G.sequenceType&&$("#distanceVisualizationType").html($("#nuc-distanceVisualizationType").html());$("#nuc-distanceVisualizationType").remove();$("#distanceVisualizationType").kendoDropDownList({autoBind:!0});$("#distanceVisualizationType").data("kendoDropDownList").toggle();$("#distanceVisualizationType").data("kendoDropDownList").toggle();
alnA.sort(nameSorter);alnB.sort(nameSorter);alnADensity=calcDensity(alnA);alnBDensity=calcDensity(alnB);var a=checkConsistency(alnA,alnB);G.sequenceNumber=a[0];G.origLengths=a[1];G.names=nameLookup(alnA,G.sequenceNumber);newick_string=$("#newick").val().replace(/\s/g,"");dateStamp("")}catch(d){$("#errorBox").html("<b>ERROR: "+d+"</b>");$("#errorBox").fadeIn();dialogBox.close();return}alnAresults=[];alnBresults=[];alnAresults[0]=[];alnBresults[0]=[];var b=_.after(2,process2);_.defer(function(){doHomology(newick_string,
alnA,G.sequenceNumber,b)});_.defer(function(){doHomology(newick_string,alnB,G.sequenceNumber,b)});dateStamp("end process1()")}
function doHomology(a,d,b,e){if(useWorkers){var f=new Worker("script/homologySets.js");f.onmessage=function(a){a=unpack(a.data);if("error"==a.type)throw"ERROR: "+a.msg;"status"==a.type?dateStamp(a.msg):"success"==a.type&&(dateStamp("Got MSG"),alnA===d?(alnA=a.ans,G.doEvo=a.doEvo,console.log("doEvo? "+a.doEvo),homType=2+G.doEvo):alnB===d&&(alnB=a.ans),e())};f.postMessage(pack({tree:a,aln:d,seqNum:b,set:3}));dateStamp("Sent MSG")}else performHomologyWork(a,d,b,3),d[0].labeledContent[EVO]&&(G.doEvo=
1,homType=3),e()}function process2(){_.defer(function(){$("#dialogtext").html("Calculation of distances")});console.log("PROCESS 2");distanceFs=calcDistances(alnA,alnB);console.log(distanceFs.length);distances={character:[],alignment:[],sequence:[]};_.defer(process3);dateStamp("end process2()")}
function updateCurrentHomType(){console.log(distanceFs);console.log(distanceFs.length);console.log("UPDATE HOM");var a=distanceFs[homType]();distances.character[homType]=a.character;distances.alignment[homType]=a.alignment;distances.sequence[homType]=a.sequence}function process3(){G.visualize=$("#doviz:checked").val();$("#controlPanel").css("display","");$("#input").remove();$("#instructions").remove();_.defer(updateCurrentHomType);_.defer(vis);dateStamp("end process3()")}
function vis(){console.log("VIS");if(G.visualize){G.doEvo?($("#evol").removeAttr("disabled"),$("#evol").html("evol (recommended)"),$("#pos").html("pos"),$("#homologyType").val(homType)):$("#evol").remove();$("#homologyType").kendoDropDownList({autoBind:!0});$("#homologyType").data("kendoDropDownList").toggle();$("#homologyType").data("kendoDropDownList").toggle();$("#distanceVisualizationPanel").css("display","inline");cssCache=[[],[],[],[]];var a=colouredSequenceMaker(distanceFs,alnA,"alnA"),d=colouredSequenceMaker(distanceFs,
alnB,"alnB");alnAF=a;alnBF=d;a=alnAF[0];d=alnBF[0];parseInt($("#distanceVisualizationType option:selected").val());a=makeVisualiser(a,d,alnA,alnB);$("body").append(a);$("#distanceToggle").click(function(){console.log("CLICK");(sparklineDistanceType=!sparklineDistanceType)?$(this).html("similarity"):$(this).html("distance");doRedisplaySparklines()});sparklineDistanceType?$("#distanceToggle").html("similarity"):$("#distanceToggle").html("distance");applyCSS(alnAF[0],alnAF[1][homType]());applyCSS(alnBF[0],
alnBF[1][homType]());a=$("#alnA_seqs").outerWidth();charWidth=getCharWidth();for(var d=charPadding(padChars),b=0;b<G.sequenceNumber;b++)$(".seq_"+b).prepend(d),$(".seq_"+b).append(d);a=parseInt(0.5*a/charWidth)*charWidth;$("#alnA_seqs").scrollLeft(a);$("#alnB_seqs").scrollLeft(a);var e,f,g,h,a=getPositions(alnA),d=getPositions(alnB);e=a[0];f=a[1];g=d[0];h=d[1];var j="",l=0,k=l,p=cumulativeGaps(alnA),m=cumulativeGaps(alnB),q=function(){$("#alnA_seqs").scrollLeft(e[l][central]*charWidth);$("#alnB_seqs").scrollLeft(g[l][central]*
charWidth);redisplaySparklines()};sparkLineClickA=function(a){console.log("GOT CLICK");console.log(a.sparklines);console.log(a.sparklines[0].getCurrentRegionFields());central=a.sparklines[0].getCurrentRegionFields().offset;central-=p[l][central];n();q()};sparkLineClickB=function(a){central=a.sparklines[0].getCurrentRegionFields().offset;central-=m[l][central];n();q()};recalculateSparklines();redisplaySparklines();recalculateMinilines();$("#alnB_sparkline").bind("sparklineClick",sparkLineClickB);$("#alnA_sparkline").bind("sparklineClick",
sparkLineClickA);var n=function(){$("#alnA_"+k+"_"+j).removeClass("centralChar");$("#alnB_"+k+"_"+j).removeClass("centralChar");k=l;j=central;$("#charDist").text(Math.round(1E3*distances.character[homType][l][central])/1E3);$("#alnA_"+l+"_"+central).addClass("centralChar");$("#alnB_"+l+"_"+central).addClass("centralChar")};$("#alnA_seqs").bind("click",function(a){l=$(a.target).closest("div").index();central=f[l][$(a.target).closest("span").index()-padChars];n()});$("#alnB_seqs").bind("click",function(a){l=
$(a.target).closest("div").index();central=h[l][$(a.target).closest("span").index()-padChars];n()});scrollA=_.debounce(function(){visibleRange($("#alnA_seqs"),alnA[0].content.length);central=f[l][Math.round($("#alnA_seqs").scrollLeft()/charWidth)];n();$("#alnB_seqs").off("scroll");$("#alnB_seqs").scrollLeft(g[l][central]*charWidth);$("#alnB_seqs").scrollTop($("#alnA_seqs").scrollTop());$("#alnA_names").scrollTop($("#alnA_seqs").scrollTop());$("#alnB_names").scrollTop($("#alnA_seqs").scrollTop());
redisplaySparklines();_.defer(function(){$("#alnB_seqs").on("scroll",scrollB)})},200);scrollB=_.debounce(function(){central=h[l][Math.round($("#alnB_seqs").scrollLeft()/charWidth)];n();$("#alnA_seqs").off("scroll");$("#alnA_seqs").scrollLeft(e[l][central]*charWidth);$("#alnA_seqs").scrollTop($("#alnB_seqs").scrollTop());$("#alnA_names").scrollTop($("#alnB_seqs").scrollTop());$("#alnB_names").scrollTop($("#alnB_seqs").scrollTop());redisplaySparklines();_.defer(function(){$("#alnA_seqs").on("scroll",
scrollA)})},200);$("#alnA_seqs").on("scroll",scrollA);$("#alnB_seqs").on("scroll",scrollB);a=function(){$("#distanceVisualizationType option:selected").each(function(){var a=$(this).val();$("#seqColour").attr("href","css/"+a+".css")})};a();$("#distanceVisualizationType").change(a)}_.defer(function(){dialogBox.close()});_.defer(bindings);dateStamp("end vis()")}
function bindings(){$("#homologyType").change(function(){homType=parseInt($(this).val());updateCurrentHomType();var a=Math.round(1E6*distances.alignment[homType])/1E6;$("#alnDist").text(a);parseInt($("#distanceVisualizationType option:selected").val());G.visualize&&(applyCSS(alnAF[0],alnAF[1][homType]()),applyCSS(alnBF[0],alnBF[1][homType]()),recalculateSparklines(),redisplaySparklines(),recalculateMinilines());G.charDists&&(a=makeCharDist(distances,homType,alnA),$("#chardists").replaceWith(a))});
var a=makeOutput(distances,homType,alnA);$("body").append(a[0]);$("#showCharDists").click(function(){var a=window.open("","charDists","height=400,width=400");a.document.write("<html><head>");a.document.write("</head><body><pre>");a.document.write(makeRawCharDist(distances,homType,alnA).join("\n"));a.document.write("</pre></body></html>");a.document.close()});$("#showSeqDists").click(function(){var a=window.open("","seqdists","height=600,width=400"),b=makeOutput(distances,homType,alnA);a.document.write("<html><head></head><body>"+
$("<div/>").append(b[1]).html()+"</body></html>");a.document.close()});a=function(){var a=$(window).height(),b=$("#visualiser").offset().top,b=b+$("#visualiser").outerHeight(!0),b=b-$("#alnA_seqs").outerHeight(!0),b=b-$("#alnB_seqs").outerHeight(!0),b=b+$("#output table").outerHeight(!0),a=(a-b)/2;$("#alnA_seqs").css("height",a);$("#alnA_names").css("height",a);$("#alnB_seqs").css("height",a);$("#alnB_names").css("height",a);redisplaySparklines()};a();$(window).resize(a);$("#consensus").on("click",
function(){var a=window.open("","consensus","height=400,width=400");a.document.write("<html><head>");a.document.write("</head><body><pre>");for(var b=0;b<alnA.length;b++){a.document.write(">"+alnA[b].name+"\n");for(var e=[],f=0;f<alnA[b].content.length;f++)0==colDistA[f]&&e.push(alnA[b].content[f]);a.document.write(e.join("")+"\n")}a.document.write("</pre></body></html>")});dateStamp("end bindings()")}
function cumulativeGaps(a){for(var d=[],b=0;b<a.length;b++){d[b]=[];d[b][0]="-"==a[b].content[0]?1:0;for(var e=1;e<a[b].content.length;e++)d[b][e]="-"==a[b].content[e]?d[b][e-1]+1:d[b][e-1]}return d}function recalculateSparklines(){colDistA=makeRawColumnDist(distances,homType,alnA);colDistB=makeRawColumnDist(distances,homType,alnB);redisplaySparklines=_.throttle(doRedisplaySparklines,1E3)}
function doRedisplaySparklines(){console.log("distance "+sparklineDistanceType);applyColumnDist(colDistA,alnADensity,$("#alnA_seqs"),$("#alnA_sparkline"),$("#alnA_seqs").width(),sparklineDistanceType);applyColumnDist(colDistB,alnBDensity,$("#alnB_seqs"),$("#alnB_sparkline"),$("#alnB_seqs").width(),sparklineDistanceType)}
function recalculateMinilines(){for(var a=new Date,d=0;d<distances.sequence[homType].length;d++){var b=$(".miniline_"+d);b.css("width","30%");b.html("<img src='png/"+Math.floor(100*distances.sequence[homType][d])+".png' title='"+distances.sequence[homType][d]+"' height='10px' style='max-width:100%'/>")}console.log(new Date-a)}
function calcDensity(a){for(var d=[],b=0;b<a.length;b++)for(var e=0;e<a[b].content.length;e++)"-"!=a[b].content[e]&&(d[e]||(d[e]=0),d[e]++);for(b=0;b<d.length;b++)d[b]/=a.length;return d};SSP=0;SIM=1;POS=2;EVO=3;onmessage=function(a){var a=JSON.parse(a.data),d=a.G;dist=getDistances(a.A,a.B,d.doEvo,a.gapsHere,d);postMessage(JSON.stringify({type:"success",distances:dist}))};function dssp(a,d,b,e){return b==e&&0<b?[a,d+1]:0<b&&0<e?[a+2,d+2]:0<b||0<e?[a+1,d+1]:[a,d]}function dseq(a,d,b,e){0>b&&(b=0);0>e&&(e=0);return dgen(a,d,b,e)}function dgen(a,d,b,e){return b!=e?[a+1,d+1]:[a,d+1]}var dpos=dgen,devol=dgen;
function quickDistNew(a,d,b){console.log("quickDistNew "+b);var e=[],f=[],g=0,h=0,j,l=2;switch(b){case 0:j=dssp;break;case 1:j=dseq;break;case 2:j=dpos;break;case 3:j=devol,l=3}for(b=0;b<a.length;b++){e[b]=[];for(var k=f[b]=0,p=0,m=0;k<a[b].content.length&&p<d[b].content.length;)if("-"==a[b].content[k])k++;else{if("-"!=d[b].content[p]){for(var q=0,n=0,r=0;r<a.length;r++)r!=b&&(n=j(q,n,a[r].labeledContent[l][k],d[r].labeledContent[l][p]),q=n[0],n=n[1]);f[b]+=q;h+=q;q=0==n?0:q/n;e[b].push(q);m+=n;k++}p++}g+=
m;f[b]/=m}n={};n.character=e;n.alignment=h/g;n.sequence=f;return n}function calcDistances(a,d){console.log("calcDistances");var b=[];console.log("HUH");console.log(a);console.log(a[0].labeledContent);console.log(a[0].labeledContent.length);var e=a[0].labeledContent.length;console.log(e);b.push(_.memoize(function(){return quickDistNew(a,d,0)}));for(var f=1;f<e;f++){var g=_.bind(quickDistNew,{},a,d,f);b.push(_.memoize(g))}return b}
function getIntersection(a,d){for(var b=0,e=0;e<a.length;e++)"-"!=a[e]&&"-"!=d[e]&&a[e]==d[e]&&b++;return b}function getUnion(a,d){for(var b=0,e=0;e<a.length;e++)"-"!=a[e]&&"-"!=d[e]?(b++,a[e]!=d[e]&&b++):("-"!=a[e]||"-"!=d[e])&&b++;return b};function Sequence(a,d){if(!(this instanceof Sequence))return new Sequence(a,d);this.name=a;this.content=d}var nextNodeID=0,nodeIDs={};function nodeID(a){return a.toString()+"---"}
function parser(a,d){var b=[],e,f,g=RegExp("(^>.+)(?:\n)(^[^>]+)","mg");G.sequenceType="nucleotide";for(var h=/[^ABCDEFGHIKLMNOPQRSTUVWYZXabcdefghiklmnopqrstuvwyzx*-]/,j=/[EFILOPQZefilopqz*]/,l,k=0;parsing=g.exec(a);){e=parsing[1].trim().replace(/^>/,"").replace(/\s/g,"_");f=parsing[2].trim().replace(/\n/g,"");var p=f.search(h);if(-1!=p)throw"Invalid character in sequence "+e+': "'+f[p]+'"';-1!=f.search(j)&&(G.sequenceType="amino acid");b[k]=new Sequence(e,f);if(l&&l!=b[k].content.length)throw"Sequences of differing lengths in "+
d;l=b[k].content.length;k++}return b}function labeller(a,d,b,e){for(var f=0;f<e;f++)a[f].labeledContent=[];b&&evoLabeller(a,d,e);for(f=0;f<e;f++){a[f].labeledContent[SSP]=[];a[f].labeledContent[SIM]=[];a[f].labeledContent[POS]=[];for(var g=d=0,h=0;h<a[f].content.length;h++)"-"!=a[f].content[h]?(g=++d,a[f].labeledContent[POS].push(g),b&&(a[f].labeledContent[EVO][h]=g)):(a[f].labeledContent[POS].push(-g),b&&(a[f].labeledContent[EVO][h]=-(1E4*a[f].labeledContent[EVO][h]+g)))}}
function nameLookup(a,d){names={};for(var b=0;b<d;b++)names[a[b].name]=b;return names}function evoLabeller(a,d,b){for(var e=nameLookup(a,b),f=0;f<b;f++)a[f].labeledContent[EVO]=[];for(var g=0;g<a[0].content.length;g++){gapMemory=[];for(f=0;f<b;f++)"-"==a[f].content[g]&&gapMemory.push(a[f].name);if(0<gapMemory.length){splits=d.splitsFor(gapMemory);for(f=0;f<gapMemory.length;f++)a[e[gapMemory[f]]].labeledContent[EVO][g]=splits[gapMemory[f]]}}}
function nameSorter(a,d){return void 0==a.name&&void 0!=d.name?1:void 0==d.name&&void 0!=a.name||a.name<d.name?-1:a.name>d.name?1:0};function checkConsistency(a,d){var b,e=[],f=[],g=[],h,j,l=[];if(!G.ignoreNamesFlag)for(var k=0;k<b;k++)if(a[k].name!=d[k].name)throw'Sequence identifiers are not consistent between alignments. Fix this issue or use "Ignore Names" if you are certain the sequences are in the same order in both alignments';if(a.length!=d.length)throw"Both alignments must contain the same number of sequences";b=a.length;for(k=0;k<b;k++){e[k]=a[k].content.replace(/-/g,"");f[k]=d[k].content.replace(/-/g,"");h=e[k].length;
j=f[k].length;if(h!=j)throw b=G.ignoreNamesFlag?k+1:'"'+a[k].name+'"',"Sequences "+b+" in each alignment are not mutually consistent due to different lengths";l[k]=h;g[k]=e[k]}return[b,l,g]};function sequenceMaker(a,d){$sequenceDiv=$("<div/>").attr("id",d+"_seqs").addClass("seqs");for(var b=0;b<G.sequenceNumber;b++){$colouredSeqDivs=$("<div/>").addClass("seq_"+b);for(var e=0,f=0;f<a[b].content.length;f++){var g=$("<span/>").text(a[b].content[f]).addClass(a[b].content[f].toUpperCase()).addClass("clickable");"-"!=a[b].content[f]&&(g.attr("id",d+"_"+b+"_"+e),e++);$colouredSeqDivs.append(g)}$sequenceDiv.append($colouredSeqDivs)}return $sequenceDiv}
function colouredCSSMaker(a,d){for(var b=[],e=0;e<a.length;e++)b[e]=_.memoize(_.bind(function(b){for(var b=a[b]().character,e=[],h=[],j=0;j<G.sequenceNumber;j++){h[j]=[];for(var l=0,k=0;k<d[j].content.length;k++)"-"!=d[j].content[k]?($character=[Math.round(255*b[j][l]),Math.round(1E6*b[j][l])/1E6],l++):$character=null,h[j].push($character);e.push(h[j])}return e},{},e));return b}
function applyCSS(a,d){var b=0;_.each($(a).children("div"),function(a){var f=0;_.each($(a).contents(".clickable"),function(a){if(d[b][f]){var e=$(a);_.chain(e.attr("class").split(" ")).filter(function(a){return"dist"==a.substring(0,4)}).each(function(a){e.removeClass(a)});e.addClass("dist"+d[b][f][0]);e.attr("title",d[b][f][1])}f++});b++});return a}function colouredSequenceMaker(a,d,b){var e=sequenceMaker(d,b),a=colouredCSSMaker(a,d,b);return[e,a]}
function makeVisualiser(a,d,b,e){var f=$("<div/>").attr("id","visualiser"),g=$("<div/>").attr("id","alnA_names").addClass("names"),h=$("<div/>").attr("id","alnB_names").addClass("names");for(i=0;i<G.sequenceNumber;i++)0==i%2?(g.append("<div class='row0'><div class='name' title='"+b[i].name+"'>"+b[i].name+"</div><div class='miniline_"+i+"'></div></div>"),h.append("<div class='row0'><div class='name' title='"+e[i].name+"'>"+e[i].name+"</div><div class='miniline_"+i+"'></div></div>")):(g.append("<div class='row1'><div class='name' title='"+
b[i].name+"'>"+b[i].name+"</div><div class='miniline_"+i+"'></div></div>"),h.append("<div class='row1'><div class='name' title='"+e[i].name+"'>"+e[i].name+"</div><div class='miniline_"+i+"'></div></div>"));g.append($("<div>&nbsp;</div>").css("height",scrollbarWidth()));h.append($("<div>&nbsp;</div>").css("height",scrollbarWidth()));b=$("<div/>").append(g,a).attr("id","alnA_scroll").addClass("scrollbox");d=$("<div/>").append(h,d).attr("id","alnB_scroll").addClass("scrollbox");h=$("<button class='k-button' id='distanceToggle' />");
h.css("height","30px").css("font-size","14px").css("margin-top","7px");e=$("<span />").attr("id","alnA_sparkline").css("height","40px").css("width",a.width()).css("float","right").css("padding-top","5px");e=$("<div />").css("width","100%").css("overflow","hidden").css("display","block").append(h).append(e);h.html("distance");a=$("<span />").attr("id","alnB_sparkline").css("height","40px").css("width",a.width()).css("float","right").css("padding-top","5px");a=$("<div />").css("width","100%").css("overflow",
"hidden").css("display","block").append(a);f.append(b,e,d,a);return f}
function makeOutput(a,d,b){var e=$("<div/>").attr("id","output"),f=$("<table/>").attr("id","output"),g=Math.round(1E6*a.alignment[d])/1E6;if(G.visualize){var h=$("<table/>").css("display","inline").css("float","left").append($("<tr />"));h.append($("<td />").append("Total alignment distance:"));h.append($("<td />").attr("id","alnDist").css("width","8em").css("font-weight","bold").text(g));e.append(h);h=$("<table/>").css("display","inline").css("float","right").append($("<tr />"));h.append($("<td />").append("Focused character distance:"));
h.append($("<td />").attr("id","charDist").css("font-weight","bold").css("width","5em"));e.append(h)}var h=$("<tr/>"),g=$("<td />").attr("id","alnDist").text(g),j=$("<td />").append("Alignment distance");h.append(j);h.append(g);for(g=0;g<G.sequenceNumber;g++){var l=Math.round(1E6*a.sequence[d][g])/1E6,j=$("<tr/>"),k=$("<td/>").append("Distance for sequence "+b[g].name),l=$("<td/>").attr("id",b[g].name+"_dist").text(l);j.append(k);j.append(l);f.append(j)}f.append(h);return[e,f]}
function makeCharDist(a,d,b){for(var e=$("<div/>").attr("id","chardists"),f=[],g=0;g<G.sequenceNumber;g++){var h=[];h.push(b[g].name);for(var j=0;j<G.origLengths[g];j++)h.push(a.character[d][g][j]);f[g]=$("<p/>").attr("id","chardists_"+b[g].name).html(h.toString());e.append(f[g])}return e}function makeRawCharDist(a,d,b){for(var e=[],f=0;f<G.sequenceNumber;f++){var g=[];g.push(b[f].name);for(var h=0;h<G.origLengths[f];h++)g.push(a.character[d][f][h]);e.push(g)}return e}
function makeRawColumnDist(a,d,b){for(var e=[],f=0;f<b[0].content.length;f++)e[f]=0;for(var g=0;g<b.length;g++)for(var h=0,j=b[g].content,f=0;f<j.length;f++)"-"!=j[f]&&(e[f]+=a.character[d][g][h]/b.length,h++);return e}function makeVisualColumnDist(a,d,b,e,f,g){a=makeRawColumnDist(a,d,b);applyColumnDist(a,e,f,g)}
function visibleRange(a,d){var b=a.scrollLeft(),e=a[0].scrollWidth,f=a.width(),g=d+2*padChars,h=Math.floor(b/e*g),h=h-padChars,b=Math.floor((b+f)/e*g),b=b-padChars;b>d&&(b=d);0>h&&(h=0);return[h,Math.floor((h+b)/2),b]}
function applyColumnDist(a,d,b,e,f,g){for(var h=visibleRange(b,a.length),b=h[0],h=h[2],j=[],l=[],k=[],p=[],m=0;m<b;m++)j.push(a[m]),l.push(null),k.push(d[m]),p.push(null);j.push(a[b]);l.push(a[b]);k.push(d[b]);p.push(d[b]);for(m=b+1;m<h-1;m++)l.push(a[m]),j.push(null),p.push(d[m]),k.push(null);j.push(a[h-1]);l.push(a[h-1]);p.push(d[h-1]);k.push(d[h-1]);for(m=h;m<a.length;m++)j.push(a[m]),l.push(null),k.push(d[m]),p.push(null);e.css("width",f+"px");barWidth=Math.max(f/a.length,1);console.log("INVERT? "+
g);if(g)for(m=0;m<a.length;m++)null!=j[m]&&(j[m]=d[m]-j[m]),null!=l[m]&&(l[m]=d[m]-l[m]);e.sparkline(k,{width:f,chartRangeMax:1,chartRangeMin:0,height:"30px",lineColor:"#444444",fillColor:"#444444",disableTooltips:!0,disableHighlight:!0,spotColor:!1,minSpotColor:!1,maxSpotColor:!1});e.sparkline(p,{composite:!0,width:f,chartRangeMax:1,chartRangeMin:0,height:"30px",lineColor:"black",fillColor:"black",disableTooltips:!0,disableHighlight:!0,spotColor:!1,minSpotColor:!1,maxSpotColor:!1});e.sparkline(j,
{composite:!0,chartRangeMax:1,chartRangeMin:0,height:"30px",chartRangeMax:1,width:f,fillColor:"#6c8be9",lineColor:!1,disableTooltips:!0,disableHighlight:!0,spotColor:!1,minSpotColor:!1,maxSpotColor:!1});e.sparkline(l,{width:f,chartRangeMax:1,chartRangeMin:0,height:"30px",composite:!0,lineColor:!1,fillColor:"blue",disableTooltips:!0,disableHighlight:!0,spotColor:!1,minSpotColor:!1,maxSpotColor:!1})}$(window).resize(function(){divWidth=$("#alnA_Seqs").width()});
function getPositions(a){for(var d=[],b=[],e=0;e<G.sequenceNumber;e++){d[e]=[];b[e]=[];for(var f=0,g=0;g<a[e].content.length;g++)b[e][g]=f,d[e][f]=g,"-"!=a[e].content[g]&&f++}return[d,b]}function scanCentralChar(a){for(startingPoint=Math.round(a);void 0==characterAt[0][0][startingPoint];)startingPoint--;return characterAt[0][0][startingPoint]}
function charPadding(a){str='<span class="padding">&nbsp;</span>';if(!a)return"";for(var d=str,b=[str],e=1,f,g;e<a;){f=a-e;str=d;for(g=2;g<f;g*=2)str+=str;b.push(str);e+=g/2}return b.join("")}
function transparentAminoCSS(a,d){for(var b=[],e=0;e<G.sequenceNumber;e++){b[e]=[];console.log("transparentAminoCSS "+d);for(var f=0;f<G.origLengths[e];f++)opacity=1==d?a[e][f]:2==d?1:1-a[e][f],console.log($("#alnA_"+e+"_"+f).css("background-color")),b[e].push($("#alnA_"+e+"_"+f).css("background-color").replace("rgb","rgba").replace(")",", "+opacity+")")),console.log(b[e][f])}return b}
function changeDistanceVisualization(a){if(a)for(d=0;d<G.sequenceNumber;d++)for(b=0;b<G.origLengths[d];b++)$("#alnA_"+d+"_"+b).css("background-color",a[d][b]),$("#alnB_"+d+"_"+b).css("background-color",a[d][b]);else for(var d=0;d<G.sequenceNumber;d++)for(var b=0;b<G.origLengths[d];b++)$("#alnA_"+d+"_"+b).css("background-color","")}
function getCharWidth(){var a,d=$("<div/>").addClass("seqs");d.append($("<span id='widthTest'>A</span>"));d.appendTo($("body"));a=parseInt($("#widthTest").css("padding-left"))+parseInt($("#widthTest").css("padding-right"))+$("#widthTest").width();d.remove();return a-1}
function scrollbarWidth(){var a=jQuery('<div style="width: 100%; height:200px;">test</div>'),d=jQuery('<div style="width:200px;height:150px; position: absolute; top: 0; left: 0; visibility: hidden; overflow:hidden;"></div>').append(a),b=a[0],a=d[0];jQuery("body").append(a);b=b.offsetWidth;d.css("overflow","scroll");a=a.clientWidth;d.remove();return b-a};SSP=0;SIM=1;POS=2;EVO=3;try{importScripts("newick_parser.js","sequence.js"),importScripts("http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js")}catch(e$$15){}pack=function(a){return JSON.stringify(a)};unpack=function(a){return JSON.parse(a)};
onmessage=function(a){var a=unpack(a.data),d=a.tree,b=0,e=a.aln;try{e=performHomologyWork(d,e,a.seqNum),e[0].labeledContent[EVO]&&(b=1)}catch(f){f.message?(a=f.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@").split("\n"),postMessage(pack({type:"error",msg:f+"\n"+a}))):postMessage(pack({type:"error",msg:f}));return}postMessage(pack({type:"success",ans:e,doEvo:b}))};
function performHomologyWork(a,d,b){if(a){root=parseNewickString(a);treeNames=[];for(a=0;a<root.length;a++)treeNames.push(root[a].name);treeNames.sort();for(a=0;a<d.length;a++)if(treeNames[a]!=d[a].name)throw"Names differ in Newick tree and alignments";if(void 0!=treeNames[d.length])throw"There are more sequences in the Newick tree than in the alignments";doEvo=1;tree=makeTree(root)}else tree=null,doEvo=0;try{postMessage(pack({type:"status",msg:"1"}))}catch(e){}labeller(d,tree,doEvo,b);try{postMessage(pack({type:"status",
msg:"2"}))}catch(f){}return d}function resortNonOverlapping(a,d){var b;do{b=!1;for(var e=0;e<a[0].content.length-1;e++)if(areNonOverlapping(e,a,d)&&shouldBeFlipped(e,a,d)){for(b=0;b<d;b++){var f=a[b].content.substr(0,e).concat(a[b].content[e+1]).concat(a[b].content[e]).concat(a[b].content.substr(e+2));a[b].content=f}b=!0}}while(b);return a}function areNonOverlapping(a,d,b){for(var e=!0,f=0;f<b;f++)if("-"!=d[f][a]&&"-"!=d[f][a+1]){e=!1;break}return e}
function shouldBeFlipped(a,d,b){for(var e=!1,f=0;f<b;f++)if(!("-"==d[f][a]&&"-"==d[f][a+1])){e="-"==d[f][a+1];break}return e};try{importScripts("http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js")}catch(e$$20){}function Node(){if(!(this instanceof Node))return new Node}Node.prototype.isRoot=function(){return"undefined"===typeof this.nodeparent};Node.prototype.isLeaf=function(){return"undefined"===typeof this.children||0==this.children.length};
Node.prototype.descendents=function(){try{var a;a=nodeList(this);var d=[];for(i=0;i<a.length;i++)a[i].isLeaf()&&d.push(a[i].name);return d}catch(b){throw"WTF!";}};Node.prototype.allSplits=function(){var a=this.descendents().sort(),d;d=nodeList(this);for(var b=[],e=0;e<d.length;e++)if(d[e].isLeaf())b.push([[d[e].name],_.without(a,d[e].name).sort()]);else{var f=d[e].descendents().sort();b.push([f,_.difference(a,f).sort()])}return b.sort()};
Node.prototype.splitsIDs=_.memoize(function(){var a=this.allSplits(),d={},b=0;_.each(a,function(a){d[a[0]]=b;d[a[1]]=b;b++});return d});Node.prototype.splitsFor=function(a){var d=this.splitsIDs();if(this.isRoot()){var b=splitsForRoot(this,a);_.chain(b).keys().each(function(a){b[a]=d[b[a].sort()]});return b}throw Error("Only call Node#splitsFor on the root!");};var c=0;
Node.prototype.findNodeWithNoneDesc=function(a){if(_.difference(this.descendents(),a).length==this.descendents().length)return this;if(this.children)for(var d=0;d<this.children.length;d++){var b=this.children[d].findNodeWithNoneDesc(a);if(b)return b}return null};
Node.prototype.downCopy=function(a){var d=nodeList(this),b=[];_.each(d,function(a){var d=new Node;a.name&&(d.name=a.name);d.id=a.id;b[d.id]=d});_.each(d,function(a){var d=b[a.id];a.nodeparent&&(d.nodeparent=b[a.nodeparent.id]);a.children&&(d.children=[],_.each(a.children,function(a){d.children.push(b[a.id])}))});b[this.id].nodeparent=a;a.children.push(b[this.id])};c=0;
Node.prototype.upCopy=function(a,d){var b=new Node;b.name=this.name;b.id=this.id;b.children=[];b.nodeparent=a;a.children.push(b);_.chain(this.children).filter(function(a){return a!==d}).each(function(a){a.downCopy(b)});this.nodeparent&&this.nodeparent.upCopy(b,this)};
Node.prototype.rootedCopy=function(){var a=new Node;a.name=this.nodeparent.name;a.id=this.nodeparent.id;a.children=[];_.each(this.nodeparent.children,function(d){d.downCopy(a)});this.nodeparent.nodeparent&&this.nodeparent.nodeparent.upCopy(a,this.nodeparent);return a};c=0;function splitsForRoot(a,d){var b=splitsForX(a,d);return _.reduce(b,function(a,b){a[b[0]]=b[1];return a},{})}
function splitsForX(a,d){var a=a.findNodeWithNoneDesc(d).rootedCopy(),b={},e={},f={},g=nodeList(a).reverse();_.each(g,function(a){var b;b=a.descendents();try{f[a.id]=b}catch(d){throw b;}});_.each(d,function(a){e[a]=1});for(var h=0;h<g.length;h++){var j=g[h];if(!j.children||0==j.children.length)1==e[j.name]&&(b[j.id]=1);else{var l=!0;_.each(j.children,function(a){b[a.id]||(l=!1)});l&&(_.each(j.children,function(a){delete b[a.id]}),b[j.id]=1)}}var k=[],p=_.filter(g,function(a){return b[a.id]}),m=!1;
_.each(p,function(b){var d=f[b.id];if(b.nodeparent===a){if(!m){m=!0;for(firstLevel=_.chain(p).filter(function(d){return d.nodeparent===a&&b!==d}).value();0<firstLevel.length;)d=d.concat(f[firstLevel.pop().id]);_.each(d,function(a){k.push([a,d])})}}else _.each(d,function(a){k.push([a,d])})});return k}Array.prototype.difference=function(a){return this.filter(function(d){return-1<a.indexOf(d)})};
Node.prototype.toString=function(){return this.children?(childstr="("+this.children.map(function(a){return a.toString()}).join()+")",this.isRoot()?childstr+";":childstr):this.name};
function parseNewickString(a){a=a.replace(/:[^),;]*/g,"");a=a.replace(/\)[^),;]*/g,")");if("("!=a[0])throw'Error: newick trees must start with an opening nodeparenthesis: "("';if(";"!=a[a.length-1])throw'Error: newick trees must end with a semi-colon: ";"';for(var d=unmatched=0;d<a.length;d++)"("==a[d]&&unmatched++,")"==a[d]&&unmatched--;if(0!=unmatched)throw"Error: newick tree contains different number of opening and closing nodeparentheses. ";temp={index:0,cursor:0,nodeparents:[]};a=basicParse(a);
delete temp;return a}function basicParse(a){if(null==d)var d=[];for(;";"!=a[temp.cursor];)switch(a[temp.cursor]){case "(":temp.cursor++;newNode(null,d,a);break;case ",":temp.cursor++;break;case ")":temp.nodeparents.pop();temp.cursor++;break;case ";":break;default:var b=a.substring(temp.cursor).match("^[0-9A-Za-z_|/\\.-]+"),b=b instanceof Array?b[0]:b;temp.cursor+=b.length;newNode(b,d,a)}return d}
function newNode(a,d,b){d[temp.index]=new Node;null==a?(d[temp.index].children=[],nodeLinker(d,b),temp.nodeparents.push(temp.index)):(d[temp.index].name=a,nodeLinker(d,b));temp.index++}function nodeLinker(a){temp.nodeparents.length&&(a[temp.index].nodeparent=temp.nodeparents[temp.nodeparents.length-1],a[a[temp.index].nodeparent].children.push(temp.index))}
function fixNode(a,d){d.children&&(d.children=d.children.map(function(b){return a[b]}));if(d.nodeparent||0==d.nodeparent)d.nodeparent=a[d.nodeparent];return d}function getRoot(a){for(var d=0;d<a.length;d++){var b=a[d];if(b.isRoot())return b}}function nodeList(a){var d=[];d.push(a);for(a=0;a<d.length;){if(d[a].children)for(var b=d[a].children,e=0;e<b.length;e++)d.push(b[e]);a+=1}return d}function enforceBi(a){stack=nodeList(a)[0];for(a=stack.length-1;0<=a;a--)doEnforceBi(stack[a])}
function doEnforceBi(a){if(a.children&&2!=a.children.length&&!(3==a.children.length&&a.isRoot()))if(1==a.children.length){par=a.nodeparent;a.children[0].nodeparent=par;for(var d=0;d<par.children.length;d++)par.children[d]==this&&(par.children[d]=a.children[0])}else for(;2<a.children.length;)d=new Node,d.children=a.children.slice(0,2),d.nodeparent=a,a.children[1]=d,a.children.shift()}
function unroot(a){if(3==a.children.length)return a;if(2!=a.children.length)throw Error("Tree is neither already rooted or bifurcating");a.children[0].isLeaf?(newroot=a.children[1],newchild=a.children[0]):(newroot=a.children[0],newchild=a.children[1]);newroot.children.push(newchild);newchild.nodeparent=newroot;newroot.nodeparent=void 0;return newroot}function makeTree(a){var d=getRoot(a.map(function(b){return fixNode(a,b)}));enforceBi(d);d=unroot(d);return numberNodes(d)}
function numberNodes(a){stack=nodeList(a);var d=0;_.each(stack,function(a){a.id=d;d++});return a};
